name: Build Application

env:
  PROJECT_PATH: src/workshop-app
  PROJECT_NAME: Workshop Application
  PACKAGE_ID: workshop-app
  OCTOPUS_SPACE: 
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - src/**

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set version number
      run: echo "PACKAGE_VERSION=$(date +'%Y.%-m.%-d').$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
    - name: Get current branch name
      run: echo "CURRENT_GITBRANCH=$(git symbolic-ref HEAD --short)" >> $GITHUB_ENV
    # - name: Set student target space name
    #   if: ${{ env.CURRENT_GITBRANCH != 'main' }}
    #   env:
    #     OCTOPUS_SPACE: ${{ env.GITHUB_REF_NAME }}
    #   run: echo "Using student space '${{ env.OCTOPUS_SPACE }}' for package publishing"
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore $PROJECT_PATH
    - name: Update build info file
      run: echo "$PACKAGE_VERSION ($CURRENT_GITBRANCH)" > $PROJECT_PATH/wwwroot/built-version.txt
    - name: Build
      run: dotnet build --no-restore --configuration Release $PROJECT_PATH
    - name: Create artifacts folder
      run: |
        mkdir "$GITHUB_WORKSPACE/artifacts"
        mkdir "$GITHUB_WORKSPACE/artifacts/$PACKAGE_ID"
    - name: Publish application
      run: dotnet publish --configuration Release --no-restore --output "$GITHUB_WORKSPACE/artifacts/$PACKAGE_ID" $PROJECT_PATH
    - name: Install Octopus CLI
      uses: OctopusDeploy/install-octopus-cli-action@v1.1.8
      with:
        version: latest
    - name: Create Workshop App Package
      run: octo pack --id="$PACKAGE_ID" --format="Zip" --version="$PACKAGE_VERSION" --basePath="$GITHUB_WORKSPACE/artifacts/$PACKAGE_ID" --outFolder="$GITHUB_WORKSPACE/artifacts"
    - name: Push Sample App Package
      uses: OctopusDeploy/push-package-action@v1.1.1
      with:
        server: ${{ secrets.OCTOPUS_SERVER_URL }}
        api_key: ${{ secrets.OCTOPUS_API_KEY }}
        space: ${{ env.OCTOPUS_SPACE }}
        packages: "artifacts/${{ env.PACKAGE_ID }}.${{ env.PACKAGE_VERSION }}.zip"
## <cd-start>
#################################################
## Continuous DELIVERY
#    - name: Create Release in Octopus Deploy
#      uses: OctopusDeploy/create-release-action@v1.1.1
#      with:
#        server: ${{ secrets.OCTOPUS_SERVER_URL }}
#        api_key: ${{ secrets.OCTOPUS_API_KEY }}
#        space: ${{ env.OCTOPUS_SPACE }}
#        project: ${{ env.PROJECT_NAME }}
#        packages: ${{ env.PACKAGE_ID }}:${{ env.PACKAGE_VERSION }}
#################################################
## Continuous DEPLOYMENT
#        deploy_to: Development
#################################################
## <cd-end>
